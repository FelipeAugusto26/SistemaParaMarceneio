/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.infinitysolucoes.TelaConfig;

import br.com.infinitysolucoes.dal.BancoSQlite;
import br.com.infinitysolucoes.dal.ModuloConexao;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class TelaConf extends javax.swing.JFrame {

    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    public TelaConf() {
        initComponents();

        // INICIAR CONFGURAÇÃO
        carregarConfig();
        // Iniciar icone
        setIcon();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btn_salvar_conexao_banco = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tx_nome_banco = new javax.swing.JTextField();
        tx_porta_banco = new javax.swing.JTextField();
        tx_usuario_banco = new javax.swing.JTextField();
        btn_testar_banco = new javax.swing.JButton();
        tx_id = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btn_atualizar_confi = new javax.swing.JButton();
        tx_senha_banco = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configurações do MYSQL");
        setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("CONFIGURAÇÃO DO BANCO DE DADOS");

        btn_salvar_conexao_banco.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_salvar_conexao_banco.setText("SALVAR");
        btn_salvar_conexao_banco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvar_conexao_bancoActionPerformed(evt);
            }
        });

        jLabel2.setText("NOME DO BANCO");

        jLabel3.setText("PORTA");

        jLabel4.setText("USUARIO");

        jLabel5.setText("SENHA");

        btn_testar_banco.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_testar_banco.setForeground(new java.awt.Color(0, 0, 255));
        btn_testar_banco.setText("TESTAR CONEXÃO");
        btn_testar_banco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_testar_bancoActionPerformed(evt);
            }
        });

        tx_id.setEnabled(false);
        tx_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_idActionPerformed(evt);
            }
        });

        jLabel6.setText("ID");

        btn_atualizar_confi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_atualizar_confi.setText("ATUALIZAR");
        btn_atualizar_confi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atualizar_confiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_salvar_conexao_banco, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_atualizar_confi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_testar_banco))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(tx_porta_banco, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tx_nome_banco)
                                .addComponent(tx_usuario_banco, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                            .addComponent(tx_id, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(tx_senha_banco, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(5, 5, 5)
                .addComponent(tx_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(tx_nome_banco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tx_porta_banco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tx_usuario_banco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tx_senha_banco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_salvar_conexao_banco)
                    .addComponent(btn_testar_banco)
                    .addComponent(btn_atualizar_confi))
                .addGap(19, 19, 19))
        );

        setSize(new java.awt.Dimension(356, 438));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salvar_conexao_bancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvar_conexao_bancoActionPerformed
        salvarConfBanco();
    }//GEN-LAST:event_btn_salvar_conexao_bancoActionPerformed

    private void tx_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_idActionPerformed

    private void btn_atualizar_confiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_atualizar_confiActionPerformed
        atualizar();
    }//GEN-LAST:event_btn_atualizar_confiActionPerformed

    private void btn_testar_bancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_testar_bancoActionPerformed
        testarConexao();
    }//GEN-LAST:event_btn_testar_bancoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConf().setVisible(true);
            }
        });
    }

    private void testarConexao() {
        Connection conexao2 = null;
        conexao2 = ModuloConexao.conector();

        if (conexao2 != null) {
            JOptionPane.showMessageDialog(null, "Conexao realizada com sucesso!\n Reinicie o sistema para carregar corretamente", "Conexao", JOptionPane.INFORMATION_MESSAGE);
            try {
                conexao.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Não conectato" + ex.toString());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Verifique os campos", "erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void setIcon() {
        // comando a baixo serve para trocar o icone da janela nos jframes
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/br/com/infinitysolucoes/icones/iconMarceneiro.png")));
    }

    

    private void atualizar() {
        String sql = "update configuracao set banco = ?, porta = ?, USER = ?, PASS = ? where id = ?";

        try {
            conexao = BancoSQlite.conectarSQLite();

            try {
                pst = conexao.prepareStatement(sql);

                pst.setString(1, tx_nome_banco.getText());
                pst.setString(2, tx_porta_banco.getText());
                pst.setString(3, tx_usuario_banco.getText());
                pst.setString(4, tx_senha_banco.getText());
                pst.setString(5, tx_id.getText());

                if (tx_porta_banco.getText().isEmpty() && tx_nome_banco.getText().isEmpty()
                        && tx_usuario_banco.getText().isEmpty() && tx_senha_banco.getText().isEmpty()) {

                    JOptionPane.showMessageDialog(null, "Preencha todos os campos");
                } else {

                    int verificar = pst.executeUpdate();
                    if (verificar > 0) {
                        conexao.close();
                        JOptionPane.showMessageDialog(null, "Atualizado com sucesso");

                    } else {
                        JOptionPane.showMessageDialog(null, "Erro ao atualizar");
                    }
                }

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.toString());
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }

    }

    public void salvarConfBanco() {

        String sql = "INSERT into configuracao ( banco, porta, USER, PASS)values(?,?,?,?)";

        try {
            // Abrindo conexão
            conexao = BancoSQlite.conectarSQLite();

            try {
                pst = conexao.prepareStatement(sql);

                pst.setString(1, tx_nome_banco.getText());
                pst.setString(2, tx_porta_banco.getText());
                pst.setString(3, tx_usuario_banco.getText());
                pst.setString(4, tx_senha_banco.getText());

                if (tx_porta_banco.getText().isEmpty() && tx_nome_banco.getText().isEmpty()
                        && tx_usuario_banco.getText().isEmpty() && tx_senha_banco.getText().isEmpty()) {

                    JOptionPane.showMessageDialog(null, "Preencha todos os campos");
                } else {

                    int verificar = pst.executeUpdate();
                    if (verificar > 0) {
                        JOptionPane.showMessageDialog(null, "Salvo com sucesso");
                        conexao.close();
                    } else {
                        JOptionPane.showMessageDialog(null, "Erro ao salvar");
                    }
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.toString());
            }

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());

        }

    }

    private void carregarConfig() {
        // Conectar SQLite para pegar configurações
        String sql = "SELECT * FROM configuracao WHERE id = ?";
        try {
            conexao = BancoSQlite.conectarSQLite();
            String id = "1";
            try {
                pst = conexao.prepareStatement(sql);
                pst.setString(1, id);
                rs = pst.executeQuery();

                if (rs.next()) {
                    tx_id.setText(rs.getString(1));
                    tx_nome_banco.setText(rs.getString(2));
                    tx_porta_banco.setText(rs.getString(3));
                    tx_usuario_banco.setText(rs.getString(4));
                    tx_senha_banco.setText(rs.getString(5));
                    conexao.close();

                } else {
                    JOptionPane.showMessageDialog(null, "Sem Cadastro");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.toString());
            }

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_atualizar_confi;
    private javax.swing.JButton btn_salvar_conexao_banco;
    private javax.swing.JButton btn_testar_banco;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField tx_id;
    private javax.swing.JTextField tx_nome_banco;
    private javax.swing.JTextField tx_porta_banco;
    private javax.swing.JPasswordField tx_senha_banco;
    private javax.swing.JTextField tx_usuario_banco;
    // End of variables declaration//GEN-END:variables

}
